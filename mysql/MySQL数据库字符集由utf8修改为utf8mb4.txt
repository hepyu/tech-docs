MySQL数据库字符集由utf8修改为utf8mb4一例
2015年10月15日 15:51:16 yumushui 阅读数：16998 标签： mysql  更多
个人分类： MySQL数据库
﻿﻿
对于mysql 5.5 而言，如果不设定字符集，mysql默认的字符集是 latin1 拉丁文字符集；
为了统一管理和应用开发的方便，一般都会统一将操作系统，客户端，数据库各方面的字符集都设置为 utf8 字符集，即能满足各种字符应用，又能统一字符集，避免各种乱码问题。


但随着各种业务的进一步发展，除了各个国家的本身语言字符，经常也会有一些表情符号出现在应用程序中，而在mysql 5.5 之前，UTF-8编码只支持1-3个字节，支持BMP这部分的Unicode编码区；从MySQL 5.5开始，可以支持4个字节UTF编码 utf8mb4 ，一个字符能够支持更多的字符集，也能够支持更多表情符号。


utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。所以现在一些新的业务，比如ISO等，会将MySQL数据库的字符集设置为utf8mb4。

今天在处理一个应用需求的时候，就遇到这样一个问题：
应用所有的客户端都是utf8字符集，MySQL数据库也是utf8字符集，但现在有业务需要使用mb4部分增加的字符，需要MySQL数据调整字符集。

当然调整的最好方法是客户端，mysql数据库的字符集都修改为utf8mb4，但这样修改量比较大，而且如果客户端一部分修改为utf8，一部分为utf8mb4的话，容易发生混乱。
所以业务需要所有客户端的utf8字符集不变，仍让保持为统一的utf8，只修改MySQL数据库端，保证客户端连接的utf8字符集连接到数据使用后，能够当做utf8mb4字符来使用。

经过几次测试后，MySQL数据库的my.cnf中关于字符集的配置修改为下面的配置了：
[client]
default-character-set=utf8mb4
 
[mysqld]
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
init_connect='SET NAMES utf8mb4'
skip-character-set-client-handshake = true
 
[mysql]
default-character-set = utf8mb4







其中character-set-server 和 collation-server 这些设置为utf8mb4字符集是比较容易理解的，就是将MySQL数据库相关的字符集都设置为utf8mb4；
但为了实现客户端utf8连接到MySQL后，使用的也是utf8mb4字符集，就在 mysqld配置中配置了 init_connect='SET NAMES utf8mb4' 表示初始化连接都设置为utf8mb4字符集，再配置一个 skip-character-set-client-handshake = true 忽略客户端字符集设置，不论客户端是何种字符集，都按照init_connect中的设置进行使用，这样就满足了应用的需求。

这些参数在my.cnf配置好后，重启mysql实例让设置生效，应用人员经过各种测试后，确认满足字符集要求，各方面正常。